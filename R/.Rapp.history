require(devtools)
devtools::document()
require(devtools)
devtools::documents()
devtools::document()
require(SYNCSA)
?vartyoe
?vartype
require(SYNCSA)
?vartype
?var.dummy
? ProgressBAR
? permut.row.matrix
require(devtools)
devtools::document()
require(SYNCSA)
? permut.row.matrix
require(SYNCSA)
?belonging
?matrix.p
gowdis
require(FD)
/gowdis
?gowdis
? procrustes.syncsa
?lm
?residuals
?lm
?matrix.p
?cor.matrix
?mantel
? rank
require(FD)
?gowdis
vartype
vartype<-"o"
i=1
(
vartype[i]=="o")
ranks
ranks=TRUE
(ranks & vartype[i]=="o")
matrix.x<-function (x, ranks = TRUE, ...)#
{#
	return(x)#
}
matrix.x(1)
matrix.x<-function (x, ranks = TRUE, ...)#
{#
	if(!is.null(ord)){#
		x<-x+1#
	}#
	return(x)#
}#
#
matrix.x(1)
matrix.x<-function (x, ranks = TRUE, ...)#
{#
	if(!missing(ord)){#
		x<-x+1#
	}#
	return(x)#
}#
#
matrix.x(1)
matrix.x<-function (x, ranks = TRUE, ord, ...)#
{#
	if(!missing(ord)){#
		x<-x+1#
	}#
	return(x)#
}#
#
matrix.x(1)
matrix.x(1,ord)
matrix.x(1,ord=1)
matrix.x<-function (x, ranks = TRUE, ord, ...)#
{#
	if(!missing(ord)){#
		x<-ord#
	}#
	return(x)#
}
matrix.x(1,ord="metric")
args(matrix.x(1,ord="metric"))
args()
arg()
matrix.x<-function (x, ranks = TRUE, ord, ...)#
{#
	if(missing(ord)){#
		x<-x=1#
	}#
	return(x)#
}
matrix.x(1,ord="metric")
matrix.x(1)
matrix.x<-function (x, ranks = TRUE, ord, ...)#
{#
	if(missing(ord)){#
		x<-x+1#
	}#
	return(x)#
}#
matrix.x(1)
?rao.diversity
S=1
S=50
S=10
1 - diag(x = rep(1, S))
? rao.diversity
require(SYNCSA)
? rao.diversity
data(flona)
rao.diversity(flona$community)
rao.diversity(flona$community,traits=flona$traits)
rao.diversity(flona$community)$Simpson
cbind(rao.diversity(flona$community)$Simpson)
dados<-matrix(sample(0:1,100000,replace=T),1000,100)
write.table(dados,"dados.txt",row.names = F, col.names = F)
ncol(traits)
ncol(dados)
options("SYNCSA.speed")
require(SYNCSA)
options("SYNCSA.speed")
options("SYNCSA.speed")=FALSE
options("SYNCSA.speed")$SYNCSA.speed
options("SYNCSA.speed")$SYNCSA.speed=FALSE
options()$SYNCSA.speed
options()$SYNCSA.speed=FALSE
options()$SYNCSA.speed<-FALSE
?options()$SYNCSA.speed
?options
options(SYNCSA.speed)
options("SYNCSA.speed")
options("SYNCSA.speed"=FALSE)
options("SYNCSA.speed")
require(devtools)
devtools::document()
roxygen2::roxygenise()
devtools::document()
require(SYNCSA)
?optimal
data(flona)
optimal(flona$community,flona$environment,flona$traits,subset.min=3,subset.max=5,pattern="tcap")
devtools::document()
tools::texi2pdf()
devtools::use_build_ignore(".git")
? use_build_ignore
require(SYNCSA)
?matrix.p
?matrix.t
?matrix.p
?matrix.x
?belonging
?cent.norm
?part.cor
?var.dummy
?var.type
?startup
?ProgressBAR
?cor.mantel
detectCores()
require(parallel)
detectCores()
?permut.row.matrix
?permut.vector
?procrustes.partial
?rao.diversity
data(flona)#
rao.diversity(flona$community)#
rao.diversity(flona$community,traits=flona$traits)
?optimal
data(flona)
optimal(flona$community,flona$traits,flona$environment,subset.min=3,subset.max=5,pattern="tcap")
optimal(flona$community,flona$traits,flona$environment,subset.min=3,pattern="tcap")
optimal(flona$community,flona$traits,flona$environment,subset.min=1,pattern="tcap")
optimal(flona$community,flona$traits,flona$environment,pattern="tcap")
optimal(flona$community,flona$traits,flona$environment,subset.min=3,subset.max=5,pattern="tcap")
optimal(flona$community,flona$traits,flona$environment,subset.min=3,subset.max=5,pattern="tdap")
optimal(flona$community,flona$traits,flona$environment,#
	subset.min=3,subset.max=5,pattern="tcap.tdap")
put.together<-list(c("fol","sem"),c("tam","red"))#
put.together
optimal(flona$community,flona$traits,flona$environment,
subset.min=1,subset.max=3,pattern="tcap",put.together=put.together)
?optimal
?organize.syncsa
require(ADRS)
?ADRS
?flona
?ADRS
data(ADRS)
ADRS
?flona
organize.syncsa(ADRS$community,ADRS$traits,ADRS$phylo,ADRS$envir)
?optimal
?organize.syncsa
?syncsa
organize.syncsa(ADRS$community,ADRS$traits,ADRS$phylo,ADRS$envir)
?ADRS
?flona
syncsa(ADRS$community,ADRS$traits,ADRS$phylo,ADRS$envir)
syncsa(ADRS$community, ADRS$traits, ADRS$phylo, ADRS$envir)
syncsa(ADRS$community, ADRS$traits, envir = ADRS$envir)
rao.diversity(ADRS$community, traits = ADRS$traits)
rao.diversity(ADRS$community)
rao.diversity(ADRS$community, traits = ADRS$traits)
matrix.x(ADRS$community,ADRS$traits)
matrix.t(ADRS$community,ADRS$traits)
matrix.x(ADRS$community,ADRS$traits)
matrix.p(ADRS$community,ADRS$phylo)
organize.syncsa(ADRS$community,ADRS$traits,ADRS$phylo,ADRS$envir)
put.together<-list(c("fol","sem"),c("tam","red"))
data(flona)
put.together<-list(c("fol","sem"),c("tam","red"))
put.together
syncsa(flona$community, flona$traits, envir = flona$environment, put.together = put.together)
res<-syncsa(flona$community, flona$traits, envir = flona$environment, put.together = put.together)
res
ls(res)
res$weights
ADRS$traits
?optimal
ADRS
flona
ADRS
require(devtools)
devtools::document()
require(devtools)
devtools::document()
